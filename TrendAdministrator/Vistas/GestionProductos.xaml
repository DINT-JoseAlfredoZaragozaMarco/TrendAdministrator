<UserControl x:Class="TrendAdministrator.Vistas.GestionProductos"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf" 
             xmlns:local="clr-namespace:TrendAdministrator.Vistas"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="#98B8CA" BorderThickness="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5" >
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="35" Height="35"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type Button}" x:Key="ButtonsDiseño">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="DetallesProducto">
            <Setter Property="FontSize" Value="25"></Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="HabilitarBoton" BasedOn="{StaticResource ButtonsDiseño}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=ProductoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ReabastecerButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" Background="#D8BBEC" CornerRadius="5" BorderBrush="#7C33B8" BorderThickness="3" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type StackPanel}" x:Key="Detalles">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=ProductoSeleccionado}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    
    <DockPanel Background="White">
        <syncfusion:SfDataGrid x:Name="dataGrid" ItemsSource="{Binding Productos}" SelectedItem="{Binding Path=ProductoSeleccionado}" 
                                                  AllowFiltering="True"
                                                  AllowEditing="True"
                                                  ColumnSizer="Star" 
                                                  DockPanel.Dock="Top"
                                                  AutoGenerateColumns="False">
            <syncfusion:SfDataGrid.Columns>
                <syncfusion:GridTextColumn MappingName="Product"/>
                <syncfusion:GridTextColumn MappingName="Brand"/>
                <syncfusion:GridTextColumn MappingName="ProductType"/>
                <syncfusion:GridCurrencyColumn MappingName="Price"/>
            </syncfusion:SfDataGrid.Columns>            
        </syncfusion:SfDataGrid>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Bottom">
            <Button Background="#F08282" Template="{DynamicResource ButtonControlTemplate}" 
                                           Style="{StaticResource HabilitarBoton}" 
                                           Command="{Binding Path=EliminarProductoCommand}">
                <Button.Content>
                    <Image Source="../Assets/trash.ico"/>
                </Button.Content>
            </Button>
            <Button Background="#a4e4d9" Template="{DynamicResource ButtonControlTemplate}" Style="{StaticResource HabilitarBoton}" Command="{Binding Path=EditarProductoCommand}">
                <Button.Content>
                    <Image Source="../Assets/edit.ico"/>
                </Button.Content>
            </Button>
            <Button Background="#a4e4d9" Template="{DynamicResource ButtonControlTemplate}" Style="{StaticResource ButtonsDiseño}" Command="{Binding Path=NuevoProductoCommand}">
                <Button.Content>
                    <Image Source="../Assets/add.ico"/>
                </Button.Content>
            </Button>
        </StackPanel>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Ellipse Height="220" Width="220" Margin="10" Stretch="Uniform" HorizontalAlignment="Center">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="{Binding Path=ProductoSeleccionado.Images}"/>
                </Ellipse.Fill>
            </Ellipse>
            <StackPanel Orientation="Vertical" VerticalAlignment="Center" Style="{StaticResource Detalles}">
                <TextBlock Text="{Binding Path=ProductoSeleccionado.Product}" Style="{StaticResource DetallesProducto}"/>
                <TextBlock Text="{Binding Path=ProductoSeleccionado.Brand}" Style="{StaticResource DetallesProducto}"/>
                <TextBlock Text="{Binding Path=ProductoSeleccionado.ProductType}" Style="{StaticResource DetallesProducto}"/>
                <TextBlock Text="{Binding Path=ProductoSeleccionado.Size}" Style="{StaticResource DetallesProducto}"/>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=ProductoSeleccionado.Price}" Style="{StaticResource DetallesProducto}"/>
                    <TextBlock Text="€" Style="{StaticResource DetallesProducto}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Stock: " Style="{StaticResource DetallesProducto}" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Path=ProductoSeleccionado.Stock}" Style="{StaticResource DetallesProducto}" VerticalAlignment="Center"/>
                    <Button Style="{DynamicResource ReabastecerButton}" Content="Pedir unidades" Margin="10" Padding="10" Command="{Binding Path=ReabastecerProductoCommand}"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </DockPanel>
</UserControl>
